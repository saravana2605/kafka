apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: "{{ .Values.kafka.image.repository }}:{{ .Values.kafka.image.tag }}"
          imagePullPolicy: {{ .Values.kafka.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.kafka.service.port }}
          env:
            - name: KAFKA_BROKER_ID
              value: "{{ .Values.kafka.brokerId }}"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:{{ .Values.zookeeper.service.port }}"
            - name: KAFKA_LISTENERS
              value: "{{ .Values.kafka.listeners }}"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "{{ .Values.kafka.advertisedListeners }}"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-pvc
